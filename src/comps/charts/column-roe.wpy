<style lang="less" scoped>
@main-blue-color: rgb(131, 177, 229);
@main-green-color: #a6d94a;
.column {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    .f-c-1 {
        width: 90%;
        height: 400rpx;
        .canvas-1 {
            width: 100%;
            height: 100%;
        }
    }
    .title {
        font-size: 25rpx;
        color: #666666;
        text-align: center;
        margin-top: 10rpx;
    }
}
</style>
<template>
    <div class="column">
        <div class="f-c-1">
            <ff-canvas class="canvas-1" id="column-dom-1" canvas-id="column-1" opts="{{ opts1 }}"></ff-canvas>
        </div>
        <div class="title" v-if="title">{{title}}</div>
    </div>
</template>
<script>
import wepy from '@wepy/core';
import F2 from '@/f2-canvas/lib/f2';

let chart1 = null;
let dataSource = null;
function initChart1(canvas, width, height) { // 使用 F2 绘制图表
    const data = [];
    chart1 = new F2.Chart({
        el: canvas,
        width,
        height
    });
    chart1.legend(false);
    chart1.source(data, {
        // sales: {
        //     tickCount: 5
        // }
    });
    chart1.tooltip({
        showItemMarker: false,
        onShow(ev) {
            const { items } = ev;
            items[0].name = null;
            items[0].name = items[0].title;
            items[0].value = items[0].value + '%';
        }
    });
    chart1.interval().position('year*roe').color('year', cVal => {
        const f = dataSource && dataSource.find(item => item.year === cVal);
        if (f.type === 0) {
            return 'rgb(131, 177, 229)';
        } else {
            return '#FFD700';
        }
    });
    chart1.axis('roe', {
        position: 'left',
        labelOffset: 20, // 坐标轴文本距离轴线的距离
        label: (text, index, total) => {
            const cfg = {
                textAlign: 'center'
            };
            // 第一个点左对齐，最后一个点右对齐，其余居中，只有一个点时左对齐
            if (index === 0) {
                cfg.textAlign = 'center';
            }
            if (index > 0 && index === total - 1) {
                cfg.textAlign = 'center';
            }
            cfg.text = text + '%';  // cfg.text 支持文本格式化处理
            return cfg;
        }
    })
    chart1.render();
    return chart1;
}

wepy.component({
    props: {
        data: {
            type: Array,
            default: []
        },
        title: {
            type: String,
            default: null
        }
    },
    data: {
        opts1: {
            onInit: initChart1
        }
    },
    watch: {
        data(newVal, oldVal) {
            this.repaintChartData();
        }
    },
    methods:{
        repaintChartData() {
            // 这是timeout主要是为了防止chart对象为null
            setTimeout(() => {
                const data = this.data;
                dataSource = data;
                if (!chart1) return;
                chart1.changeData(data);
            }, 500);
        }
    },
    ready() {}
})
</script>
<config>
{
  "usingComponents": {
    "ff-canvas": "~@/f2-canvas/f2-canvas"
  }
}
</config>
