<style lang="less" scoped>

@font-size28: 28rpx;
@font-size30: 30rpx;
@font-size32: 32rpx;
@font-size36: 36rpx;

@main-black: #000000;
@main-gray: #CFCFCF;
@main-gray-deep: #676767;
@main-red: #FF0000;
@main-red-shadow: #FFB5B5;
@main-blue: #5291F5;
@main-green: #00A600;
@main-green-shadow: #CEFFCE;
@main-heightlight: #DBE11C;
@main-orange: #F39C12;
@buying-border: solid 1rpx @main-gray-deep;

.kline-container {
    // margin: 30rpx 40rpx;
    .header {
        display: flex;
        justify-content: space-between;
        .time {
            margin-top: 30rpx;
            margin-right: 40rpx;
			height: 36rpx;
			font-size: @font-size28;
			color: @main-gray;
		}
    }
    .content {
		margin: 20rpx 40rpx 0 40rpx;
		display: flex;
		justify-content: space-between;
		.treat {
			display: flex;
			padding: 20rpx 0 10rpx 0;
			flex-direction: column;
			.buy-tip-container {
				display: flex;
				.buy-item {
					display: flex;
					flex-direction: column;
					align-items: center;
					min-width: 130rpx;
					.name {
						font-size: @font-size30;
						color: @main-gray-deep;
						color: #303030;
						background-color: @main-gray;
						text-align: center;
						padding: 5rpx 0;
						width: 99%;
					}
					.borderRight {
						border-right: solid 2rpx @main-black;
					}
					.heightlight {
						background-color: @main-heightlight;
					}
					.green {
						background-color: @main-green;
						font-weight: 700;
					}
					.blue {
						background-color: @main-blue;
						font-weight: 700;
					}
					.orange {
						background-color: @main-orange;
						font-weight: 700;
					}
					.up-img {
						margin-top: 12rpx;
						width: 48rpx;
						height: 48rpx;
					}
				}
			}
			.desc-buying {
				margin-top: 30rpx;
				.buy {
					color: @main-gray;
					font-size: @font-size30;
				}
			}
		}
		.cd {
			display: flex;
			flex-direction: column;
			padding-top: 10rpx;
			.today-buy-container {
				.today-buy-item {
					display: flex;
					width: 100%;
					.label {
						display: flex;
						justify-content: center;
						align-items: center;
						color: @main-gray-deep;
						font-size: @font-size30;
						padding: 8rpx 8rpx 5rpx 8rpx;
						border-left: @buying-border;
						border-top: @buying-border;
						border-right: @buying-border;
					}
					.value {
						display: flex;
						justify-content: center;
						align-items: center;
						color: @main-gray-deep;
						padding: 8rpx 0 5rpx 0;
						width: 90rpx;
						border-top: @buying-border;
						border-right: @buying-border;
						font-size: @font-size28;
					}
					.borderBottom {
						border-bottom: @buying-border;
					}
				}
			}
			.desc {
				font-size: @font-size28;
				color: @main-gray-deep;
				margin-top: 30rpx;
			}
			.highlight-underline {
				font-size: 30rpx;
				color: @main-blue;
				text-decoration: underline;
			}
		}
    }
    .modal-content {
        text-align: left;
        padding: 10rpx 40rpx;
        box-sizing: border-box;
    }
}
</style>
<template>
    <div class="kline-container">
        <div class="header">
            <indicator :title="'K线节奏'"/>
			<span class="time">{{fitTime}}</span>
        </div>
        <div class="content">
            <div class="treat">
				<div class="buy-tip-container">
					<!-- <div v-for="(buyItem, index) in buyingLabelList" class="buy-item">
						<div 
							class="name"
							:class="[{borderRight: index < buyingLabelList.length - 1}, heightlightClass]">
							{{buyItem.label}}
						</div>
						<img v-if="buyItem.key === currentOption" class="up-img" src="../../assets/up.png" alt="">
					</div> -->
					<div class="buy-item">
						<div class="name borderRight" :class="{green: 0 === currentOption}">路人</div>
						<img v-if="0 === currentOption" class="up-img" src="../../assets/up.png" alt="">
					</div>
					<div class="buy-item">
						<div class="name borderRight" :class="{blue: 1 === currentOption}">关注</div>
						<img v-if="1 === currentOption" class="up-img" src="../../assets/up.png" alt="">
					</div>
					<div class="buy-item">
						<div class="name" :class="{orange: 2 === currentOption}">买点</div>
						<img v-if="2 === currentOption" class="up-img" src="../../assets/up.png" alt="">
					</div>
				</div>
				<!-- <div class="desc-buying">
					<div class="buy">买1：关注标的波动收缩或突破</div>
					<div class="buy">买2：突破前期阻力位回落企稳</div>
					<div class="buy">买3：再次向上突破回落前高点</div>
				</div> -->
			</div>
			<div class="cd">
				<div class="today-buy-container">
					<div class="today-buy-item">
						<div class="label">今日关注榜</div>
						<div class="value">{{stock.followCount}}</div>
					</div>
					<div class="today-buy-item">
						<div class="label borderBottom">今日买点榜</div>
						<div class="value borderBottom">{{buyingCount}}</div>
					</div>
				</div>
				<div class="desc highlight-underline" @click="handleHelp">榜单订阅</div>
			</div>
        </div>
        <i-modal title="订阅须知" visible="{{ modalVisible }}" @ok="handleCloseOk" ok-text="我知道了" :show-cancel="false">
			<div class="modal-content">
                <div>
                    <div>1. 订阅成为“牛棚”会员，查询今日关注、今天买点排行。</div>
                    <div>2.	点击客服，咨询订阅方式。</div>
                </div>
    		</div>
		</i-modal>
    </div>
</template>
<script>
import wepy from '@wepy/core';
import moment from 'moment';
import { mapMutations } from '@wepy/x';
import store from '@/store';
wepy.component({
    store,
    props: {
        stock: {
            type: Object,
            default: {}
        }
    },
    data: {
		heightlightClass: 'green',
		buyingLabelList: [
			{
				key: 0,
				label: '路人'
			}, 
			{
				key: 1,
				label: '关注'
			}, 
			{
				key: 2,
				label: '买点'
			}
		],
        modalVisible: false
    },
    computed: {
        fitTime() {
            if (this.stock && this.stock.ftime) {
                return moment(this.stock.ftime).format('MM-DD HH:mm');
            }
            return '-';
        },
		buyingCount() {
			if (this.stock) {
				return this.stock.buying1Count + this.stock.buying2Count + this.stock.buying3Count;
			} 
			return 0;
		},
		currentOption() {
			let index = 0;
			if (!this.stock) return index;
			if (this.stock.buying > 0) {
				index = 2;
			} else if (this.stock.following > 0) {
				index = 1;
			} else {
				index = 0;
			}
			return index;
		}
    },
    methods: {
		...mapMutations(['changeHomeChartVisible']),
        handleHelp() {
            this.modalVisible = true;
            this.changeHomeChartVisible(false);
        },
        handleCloseOk() {
            this.modalVisible = false;
            this.changeHomeChartVisible(true);
		}
    }
})
</script>
<config>
{
    usingComponents: {
		"indicator": "~@/comps/home/indicator",
        "i-modal": "~@/iview/dist/modal/index"
    }
}
</config>
