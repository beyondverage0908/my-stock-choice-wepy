<style lang="less">
@ring-width: 250rpx;
@ring-height: 250rpx;
@ring-color: #a6d94a;
@ring-bg-color: #eeeeee;
@ring-gap-width: 90rpx;
@ring-info-fontsize: 70rpx;
.ring {
  margin-top: 14rpx;
  margin-left: 10rpx;
}
.circle {
  -webkit-mask: radial-gradient(
    transparent @ring-gap-width,
    #000 @ring-gap-width
  );
  width: @ring-width;
  height: @ring-height;
  overflow: hidden;
  border-radius: 50%;
  position: relative;
  .circle-left {
    width: 50%;
    height: 100%;
    background: @ring-bg-color;
    transform-origin: 100% 50%;
    position: absolute;
    left: 0;
    z-index: 0;
  }
  .circle-right {
    width: 50%;
    height: 100%;
    background: @ring-bg-color;
    transition: transform 1s linear;
    transform-origin: 0% 50%;
    position: absolute;
    right: 0;
    z-index: 2;
  }
  .circle-bottom-left {
    width: 50%;
    height: 100%;
    background: @ring-color;
    position: absolute;
    left: 0;
    z-index: -1;
  }

  .circle-bottom-right {
    width: 50%;
    height: 100%;
    background: @ring-color;
    position: absolute;
    right: 0;
    z-index: 1;
  }
}
.info {
  width: @ring-width;
  height: @ring-height;
  line-height: @ring-height;
  text-align: center;
  margin-top: -@ring-height;
  font-size: @ring-info-fontsize;
  color: @ring-color;
  font-weight: 700;
}
</style>
<template>
	<div class="ring">
		<div class="circle">
			<div class="circle-left" :style="{ transition: ringLeftClass['transition'], transform: ringLeftClass['transform'] }"></div>
			<div class="circle-right" :style="{ transform: ringRightClass['transform'], transition: ringRightClass['transition'], opacity: ringRightClass['opacity'] }"></div>
			<div class="circle-bottom-left"></div>
			<div class="circle-bottom-right"></div>
		</div>
		<div class="info">{{transformScore}}</div>
	</div>
</template>
<script>
import wepy from '@wepy/core';
wepy.component({
  data: {
	  ringRightClass: {},
	  ringLeftClass: {}
  },
  props: {
    score: {
      type: Number,
      default: 0
    }
  },
  computed: {
	  transformScore() {
		  if (this.score > 0) {
			  return this.score;
		  }
		  return '-';
	  }
  },
	watch: {
		score(newVal, oldVal) {
			this.initRing();
		}
	},
  ready() {
	
  },
  methods: {
    initRing() {
      var percent = this.score / 100;
    //   var right = document.getElementsByClassName('circle-right')[0];
	//   var left = document.getElementsByClassName('circle-left')[0];
	  const ringRightClass = {};
	  const ringLeftClass = {};
      if (percent <= 0.5) {
        //红色区域不超过一半
		// right.style.transform = `rotate(${percent * 360}deg)`;
		ringRightClass.transform = `rotate(${percent * 360}deg)`;
      } else {
        //红色区域超过一半的情况，重点部分
        // right.style.transform = `rotate(180deg)`;
        // right.style.transition = `opacity 0s step-end 1s, transform 1s linear`; //timing-function需要设为linear来达到视觉上的平缓过渡
		// right.style.opacity = 0;
		ringRightClass.transform = `rotate(180deg)`;
		ringRightClass.transition = `opacity 0s step-end 1s, transform 1s linear`;
		ringRightClass.opacity = 0;

        // left.style.transition = `transform ${(percent - 0.5) / 0.5}s linear 1s`;
		// left.style.transform = `rotate(${percent * 360 - 180}deg)`;
		ringLeftClass.transition = `transform ${(percent - 0.5) / 0.5}s linear 1s`;
		ringLeftClass.transform = `rotate(${percent * 360 - 180}deg)`;
	  }
	  this.ringRightClass = ringRightClass;
	  this.ringLeftClass = ringLeftClass;
    }
  }
});
</script>

