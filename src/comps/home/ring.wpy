<style lang="less">
@font-size28: 28rpx;
@font-size30: 30rpx;
@font-size32: 32rpx;
@font-size36: 36rpx;
@font-size60: 60rpx;
@font-size70: 70rpx;

@main-black: #000000;
@main-gray: #cfcfcf;
@main-gray-deep: #676767;
@main-red: #FF0000;
@main-red-shadow: #ffb5b5;
@main-blue: #5291f5;
@main-blue-shadow: rgb(131, 177, 229);
@main-green: #00a600;
@main-green-shadow: #ceffce;

@ring-width: 250rpx;
@ring-height: 250rpx;
@ring-bg-color: #eeeeee;
@ring-gap-width: 90rpx;
.ring {
  margin-top: 14rpx;
  margin-left: 10rpx;
}
.circle {
  -webkit-mask: radial-gradient(
    transparent @ring-gap-width,
    #000 @ring-gap-width
  );
  width: @ring-width;
  height: @ring-height;
  overflow: hidden;
  border-radius: 50%;
  position: relative;
  .circle-left {
    width: 50%;
    height: 100%;
    background: @ring-bg-color;
    transform-origin: 100% 50%;
    position: absolute;
    left: 0;
    z-index: 0;
  }
  .circle-right {
    width: 50%;
    height: 100%;
    background: @ring-bg-color;
    transition: transform 1s linear;
    transform-origin: 0% 50%;
    position: absolute;
    right: 0;
    z-index: 2;
  }
  .circle-bottom-left {
    width: 50%;
    height: 100%;
    background: @main-red;
    position: absolute;
    left: 0;
    z-index: -1;
  }

  .circle-bottom-right {
    width: 50%;
    height: 100%;
    background: @main-red;
    position: absolute;
    right: 0;
    z-index: 1;
  }
}
.info {
  width: @ring-width;
  height: @ring-height;
  line-height: @ring-height;
  text-align: center;
  margin-top: -@ring-height;
  font-size: @font-size70;
  color: @main-red;
  font-weight: 700;
}
.green {
  color: @main-green;
}
.gray {
	color: @main-gray;
}
.modal-content {
	text-align: left;
	padding: 10rpx 40rpx;
	box-sizing: border-box;
}
</style>
<template>
	<div class="ring">
		<div class="circle">
			<div
				class="circle-left"
				:style="{ transition: ringLeftClass['transition'], transform: ringLeftClass['transform'] }"
			></div>
			<div
				class="circle-right"
				:style="{ transform: ringRightClass['transform'], transition: ringRightClass['transition'], opacity: ringRightClass['opacity'] }"
			></div>
			<div class="circle-bottom-left"></div>
			<div class="circle-bottom-right"></div>
		</div>
		<div class="info" :class="{gray: !rank && rank <= 0}">{{rank || '—'}}</div>
		<i-modal title="帮助" visible="{{ modalVisible }}" @ok="handleCloseOk" ok-text="我知道了" :show-cancel="false">
			<div class="modal-content">
                <div>
                    <div>1.	性价比排名指标，凝聚了十多位民间高手的智慧，是基本面与技术面融合后的复合指标，应用方法，请关注“解套宝”微信服务号。</div>
                    <div>2.	欢迎约茶线下交流，地址：南京洪武路23号1408室。</div>
                </div>
    		</div>
		</i-modal>
	</div>
</template>
<script>
import wepy from '@wepy/core';
import { mapMutations } from '@wepy/x';
import store from '@/store';
wepy.component({
	store,
  data: {
    ringRightClass: {},
	ringLeftClass: {},
	modalVisible: false
  },
  props: {
    score: {
      type: Number,
      default: 0
    },
    rank: {
      type: Number,
      default: 0
    }
  },
  computed: {
    transformScore() {
      if (this.score > 0) {
        return this.score;
      }
      return '-';
    }
  },
  watch: {
    // score(newVal, oldVal) {
    //   this.initRing();
	// },
	rank(newVal, oldVal) {
		this.initRing();
	}
  },
  ready() {
    console.log(this.rank);
  },
  methods: {
	  ...mapMutations(['changeHomeChartVisible']),
    initRing() {
	//   var percent = 1 - this.score / 100;
	//   if (!this.score) {
	// 	  percent = 0;
	//   }
	var percent = this.rank / 100;
      const ringRightClass = {};
      const ringLeftClass = {};
      if (percent <= 0.5) {
        //红色区域不超过一半
        ringRightClass.transform = `rotate(${percent * 360}deg)`;
      } else {
        //红色区域超过一半的情况，重点部分
        ringRightClass.transform = `rotate(180deg)`;
        ringRightClass.transition = `opacity 0s step-end 1s, transform 1s linear`;
        ringRightClass.opacity = 0;

        ringLeftClass.transition = `transform ${(percent - 0.5) /
          0.5}s linear 1s`;
        ringLeftClass.transform = `rotate(${percent * 360 - 180}deg)`;
      }
      this.ringRightClass = ringRightClass;
      this.ringLeftClass = ringLeftClass;
	},
	handleHelp() {
		console.log(1);
		this.modalVisible = true;
		this.changeHomeChartVisible(false);
	},
	handleCloseOk() {
		this.modalVisible = false;
		this.changeHomeChartVisible(true);
	}
  }
});
</script>
<config>
{
    usingComponents: {
        "i-modal": "~@/iview/dist/modal/index"
    }
}
</config>

